{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\Balemoja\\\\components\\\\dataFlow\\\\companyregistration\\\\AddCompaniesForm.js\";\n// import  {useRef} from 'react'\nimport \"./AddCompanies.module.css\";\nimport UserInput from \"../../hooks/user-inputs\";\n\nfunction AddCompaniesForm(props) {\n  const {\n    value: companyname,\n    isValid: validcompname,\n    hasError: inValidcompname,\n    valueChangeHandler: compnameChangeHandler,\n    onfocusHandler: blurcompname,\n    reset: resetcompanyname\n  } = UserInput(value => value.trim() !== \"\");\n  const {\n    value: contactperson,\n    isValid: validcontactperson,\n    hasError: inValidcontactperson,\n    valueChangeHandler: contactpersonChangeHandler,\n    onfocusHandler: blurcontactperson,\n    reset: resetcontactperson\n  } = UserInput(value => value.trim() !== \"\");\n  const {\n    value: tele,\n    isValid: validtele,\n    hasError: inValidtele,\n    valueChangeHandler: teleChangeHandler,\n    onfocusHandler: blurtele,\n    reset: resettele\n  } = UserInput(value => value.trim() !== \"\");\n  let formValidation = false;\n\n  if (validcompname && validcontactperson && validtele) {\n    formValidation = true;\n  } // const companyname = useRef();\n  // const contactperson = useRef();\n  // const telephone = useRef();\n\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formValidation) {\n      return;\n    } // console.log(companyname,contactperson,tele);\n\n\n    const companyDataObject = {\n      companyname,\n      contactperson,\n      tele\n    };\n    props.onAddcompaniesform(companyDataObject);\n    resetcompanyname(\"\");\n    resetcontactperson(\"\");\n    resettele(\"\"); // const items = {\n    //   name: companyname.current.value,\n    //   cperson: contactperson.current.value,\n    //   sname: telephone.current.value}\n  }; // const items = {\n  //   name :companyname.current.value,\n  //   cperson: contactperson.current.value,\n  //   sname :telephone.current.value\n  // }\n\n\n  const nameInputClasses = inValidcompname ? \"form-control invalid\" : \"form-control \";\n  const contactInputClasses = inValidcontactperson ? \"form-control invalid\" : \"form-control \";\n  const teleInputClasses = inValidtele ? \"form-control invalid\" : \"form-control \";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: nameInputClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"compname\",\n            children: \" Company Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"compname\" // ref={companyname}\n            ,\n            onBlur: blurcompname,\n            onChange: compnameChangeHandler,\n            value: companyname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), inValidcompname && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Please fill in a valid name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Add Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AddCompaniesForm;","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/Balemoja/components/dataFlow/companyregistration/AddCompaniesForm.js"],"names":["UserInput","AddCompaniesForm","props","value","companyname","isValid","validcompname","hasError","inValidcompname","valueChangeHandler","compnameChangeHandler","onfocusHandler","blurcompname","reset","resetcompanyname","trim","contactperson","validcontactperson","inValidcontactperson","contactpersonChangeHandler","blurcontactperson","resetcontactperson","tele","validtele","inValidtele","teleChangeHandler","blurtele","resettele","formValidation","submitHandler","event","preventDefault","companyDataObject","onAddcompaniesform","nameInputClasses","contactInputClasses","teleInputClasses","classes","control"],"mappings":"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","sourcesContent":["// import  {useRef} from 'react'\r\nimport \"./AddCompanies.module.css\";\r\nimport UserInput from \"../../hooks/user-inputs\";\r\n\r\nfunction AddCompaniesForm(props) {\r\n  const {\r\n    value: companyname,\r\n    isValid: validcompname,\r\n    hasError: inValidcompname,\r\n    valueChangeHandler: compnameChangeHandler,\r\n    onfocusHandler: blurcompname,\r\n    reset: resetcompanyname,\r\n  } = UserInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: contactperson,\r\n    isValid: validcontactperson,\r\n    hasError: inValidcontactperson,\r\n    valueChangeHandler: contactpersonChangeHandler,\r\n    onfocusHandler: blurcontactperson,\r\n    reset: resetcontactperson,\r\n  } = UserInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: tele,\r\n    isValid: validtele,\r\n    hasError: inValidtele,\r\n    valueChangeHandler: teleChangeHandler,\r\n    onfocusHandler: blurtele,\r\n    reset: resettele,\r\n  } = UserInput((value) => value.trim() !== \"\");\r\n\r\n  let formValidation = false;\r\n  if (validcompname && validcontactperson && validtele) {\r\n    formValidation = true;\r\n  }\r\n\r\n  // const companyname = useRef();\r\n  // const contactperson = useRef();\r\n  // const telephone = useRef();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!formValidation) {\r\n      return;\r\n    }\r\n\r\n    // console.log(companyname,contactperson,tele);\r\n\r\n    const companyDataObject = {\r\n      companyname,\r\n      contactperson,\r\n      tele,\r\n    };\r\n\r\n    props.onAddcompaniesform(companyDataObject);\r\n\r\n    resetcompanyname(\"\");\r\n    resetcontactperson(\"\");\r\n    resettele(\"\");\r\n\r\n    // const items = {\r\n    //   name: companyname.current.value,\r\n    //   cperson: contactperson.current.value,\r\n    //   sname: telephone.current.value}\r\n  };\r\n\r\n  // const items = {\r\n  //   name :companyname.current.value,\r\n  //   cperson: contactperson.current.value,\r\n  //   sname :telephone.current.value\r\n\r\n  // }\r\n\r\n  const nameInputClasses = inValidcompname\r\n    ? \"form-control invalid\"\r\n    : \"form-control \";\r\n\r\n  const contactInputClasses = inValidcontactperson\r\n    ? \"form-control invalid\"\r\n    : \"form-control \";\r\n\r\n  const teleInputClasses = inValidtele\r\n    ? \"form-control invalid\"\r\n    : \"form-control \";\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"app\">\r\n        <div className={classes.control}>\r\n          <div className={nameInputClasses}>\r\n            <label htmlFor=\"compname\"> Company Name </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"compname\"\r\n              // ref={companyname}\r\n              onBlur={blurcompname}\r\n              onChange={compnameChangeHandler}\r\n              value={companyname}\r\n            />\r\n            {inValidcompname && (\r\n              <p className=\"error-text\">Please fill in a valid name</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className={contactInputClasses}>\r\n          <label htmlFor=\"contperson\"> Contact Person </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"contperson\"\r\n            // ref={contactperson}\r\n            value={contactperson}\r\n            onBlur={blurcontactperson}\r\n            onChange={contactpersonChangeHandler}\r\n          />\r\n          {inValidcompname && (\r\n            <p className=\"error-text\">Please enter a valid Contact Person</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className={teleInputClasses}>\r\n          <label htmlFor=\"tel\"> Telephone </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"tel\"\r\n            // ref={telephone}\r\n            value={tele}\r\n            onBlur={blurtele}\r\n            onChange={teleChangeHandler}\r\n          />\r\n          {inValidcompname && (\r\n            <p className=\"error-text\">Please enter a valid Phone</p>\r\n          )}\r\n        </div> */}\r\n\r\n        <button> Add Company</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddCompaniesForm;\r\n"]},"metadata":{},"sourceType":"module"}