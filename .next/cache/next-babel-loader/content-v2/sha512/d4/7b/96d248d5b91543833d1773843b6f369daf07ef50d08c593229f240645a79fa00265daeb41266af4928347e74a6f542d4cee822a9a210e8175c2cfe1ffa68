{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\AuthForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// LogIn form and validation with firebase\nimport { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"next\";\nimport AuthenticationContext from \"../components/Token/LogInAuthentication \";\nimport classes from \"../components/usersAccount/Auth/AuthForm.module.css\";\n\nvar AuthForm = function AuthForm() {\n  _s();\n\n  var usernameInputRef = useRef();\n  var passwordInputRef = useRef();\n  var history = useHistory();\n  var authCtx = useContext(LogInAuthentication); // validation if needed\n\n  var _useState = useState(true),\n      isLogin = _useState[0],\n      setIsLogin = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var switchAuthModeHandler = function switchAuthModeHandler() {\n    setIsLogin(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    var enteredEmail = usernameInputRef.current.value;\n    var enteredPassword = passwordInputRef.current.value;\n    var url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBILHtgI_IbbZADrPf-oTa-3nJPvIL4qSs\";\n      setLoading(true);\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBILHtgI_IbbZADrPf-oTa-3nJPvIL4qSs\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      setLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(function (data) {\n          //console.log(data);\n          var errorM = data.error.message;\n          throw new Error(errorM); // if a problem look in here\n        });\n      } // Automatic logout based on time\n\n    }).then(function (data) {\n      var expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n      authCtx.login(data.idToken, expirationTime.toISOString());\n      history.replace(\"/\"); // Now the user is logged as he has received a tokken.\n      //console.log(data);\n    })[\"catch\"](function (err) {\n      //error source is built-in message form the firebase\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login \" : \"what ever\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: usernameInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, _this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AuthForm, \"xbztK8SPw2pBF7U2OREpL5NS9bU=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/pages/AuthForm.js"],"names":["useState","useRef","useContext","useHistory","AuthenticationContext","classes","AuthForm","usernameInputRef","passwordInputRef","history","authCtx","LogInAuthentication","isLogin","setIsLogin","isLoading","setLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorM","error","message","Error","expirationTime","Date","getTime","expiresIn","login","idToken","toISOString","replace","err","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["// LogIn form and validation with firebase\n\nimport { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"next\";\nimport AuthenticationContext from \"../components/Token/LogInAuthentication \";\nimport classes from \"../components/usersAccount/Auth/AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const usernameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n\n  const authCtx = useContext(LogInAuthentication);\n  // validation if needed\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = usernameInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBILHtgI_IbbZADrPf-oTa-3nJPvIL4qSs\";\n\n      setLoading(true);\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBILHtgI_IbbZADrPf-oTa-3nJPvIL4qSs\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            //console.log(data);\n            const errorM = data.error.message;\n            throw new Error(errorM); // if a problem look in here\n          });\n        }\n        // Automatic logout based on time\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n        // Now the user is logged as he has received a tokken.\n        //console.log(data);\n      })\n      .catch((err) => {\n        //error source is built-in message form the firebase\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      {/*option b/n login or signUp  */}\n      <h1>{isLogin ? \"Login \" : \"what ever\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" ref={usernameInputRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            ref={passwordInputRef}\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Loading...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}