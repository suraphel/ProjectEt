{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\Balemoja\\\\pages\\\\index.js\";\n// Destination home page, collect data from the server and renders it on the homepage/ StartPage\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\nimport ComponentUI from \"../pages/HouseCleaner\";\nimport RoutingPage from \"../components/RoutingPage\";\nimport LoginNavigation from \"../components/userAccount/components/Layout/LoginNavigation\";\nimport FetchingFromDB from \"./FetchingFromDB\";\nimport SearchBar from \"./SearchBar\";\nimport SecurityService from \"./SecurityService\";\nimport { Fragment } from \"react\";\nimport Image from \"next/image\"; // import classes from \"\";\n//empty dependcies array[] means it will only run once when the component is rendered and never there after\n// an array of input items\n// const dummyData = [\n//   {\n//     id: \"m1\",\n//     image:\n//       \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\",\n//     title: \"HomePage\",\n//     address: \"Ethiopia\",\n//   },\n//   {\n//     id: \"m2\",\n//     image:\n//       \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\",\n//     title: \"Lalibela\",\n//     address: \"Ethiopia\",\n//   },\n// ];\n\nconst StartPage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" Balemoja\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Connects highly skilled and reliable professionals with end users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      src: \"/ok.png\",\n      width: 277,\n      height: 75\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComponentUI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}; //reserver name\n//SAFE:: code written in here will only run on the server side.\n//will updata the page every time there is a request.\n// export async function getServerSideProps(context) {\n//   const request = context.req;\n//   const responce = context.res;\n//   // Get the data from any where API or .....\n//   // Always returns an object\n//   return {\n//     props: {\n//       meetups: dummyData,\n//     },\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  // we are fetching the data directly from the user input form as there is no need to make a trip to the server at this point in time.\n  // connect to the server\n  //establish connection, get acces to db, and getting data\n  const client = await MongoClient.connect(\"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db(); // to connect to the meetups db\n\n  const meetupcollection = db.collection(\"meetups\"); // create a data collection called meetup on the server\n  // result is an object with an id as one of its properties\n\n  const allresult = await meetupcollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: allresult.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 100 //refreshs the page on the server every x seconds if there request are there\n\n  };\n}\nexport default StartPage;","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/Balemoja/pages/index.js"],"names":["MeetupList","MongoClient","Head","ComponentUI","RoutingPage","LoginNavigation","FetchingFromDB","SearchBar","SecurityService","Fragment","Image","StartPage","props","meetups","getStaticProps","client","connect","db","meetupcollection","collection","allresult","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA;AAEA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,eAAP,MAA4B,6DAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,KAAP,MAAkB,YAAlB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAE,GAA5B;AAAiC,MAAA,MAAM,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAdF,eAgBE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBD,C,CAuBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AAEA;AACA;AACA,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CARqC,CAQb;;AACxB,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB,CATqC,CASc;AACnD;;AACA,QAAMC,SAAS,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,EAAxB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEO,SAAS,CAACI,GAAV,CAAeC,MAAD,KAAa;AAClCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADoB;AAElCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFkB;AAGlCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHoB;AAIlCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ8B,OAAb,CAAd;AADJ,KADF;AAULC,IAAAA,UAAU,EAAE,GAVP,CAUY;;AAVZ,GAAP;AAYD;AAED,eAAerB,SAAf","sourcesContent":["// Destination home page, collect data from the server and renders it on the homepage/ StartPage\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport Head from \"next/head\";\r\nimport ComponentUI from \"../pages/HouseCleaner\";\r\n\r\nimport RoutingPage from \"../components/RoutingPage\";\r\nimport LoginNavigation from \"../components/userAccount/components/Layout/LoginNavigation\";\r\nimport FetchingFromDB from \"./FetchingFromDB\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SecurityService from \"./SecurityService\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport Image from \"next/image\";\r\n// import classes from \"\";\r\n//empty dependcies array[] means it will only run once when the component is rendered and never there after\r\n\r\n// an array of input items\r\n// const dummyData = [\r\n//   {\r\n//     id: \"m1\",\r\n//     image:\r\n//       \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\",\r\n//     title: \"HomePage\",\r\n//     address: \"Ethiopia\",\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     image:\r\n//       \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\",\r\n//     title: \"Lalibela\",\r\n//     address: \"Ethiopia\",\r\n//   },\r\n// ];\r\n\r\nconst StartPage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title> Balemoja</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Connects highly skilled and reliable professionals with end users\"\r\n        />\r\n      </Head>\r\n\r\n      {/* <div className={backGround}> */}\r\n      <Image src=\"/ok.png\" width={277} height={75} />\r\n      {/* </div> */}\r\n\r\n      <SearchBar />\r\n      <ComponentUI />\r\n\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n//reserver name\r\n//SAFE:: code written in here will only run on the server side.\r\n\r\n//will updata the page every time there is a request.\r\n// export async function getServerSideProps(context) {\r\n//   const request = context.req;\r\n//   const responce = context.res;\r\n//   // Get the data from any where API or .....\r\n//   // Always returns an object\r\n//   return {\r\n//     props: {\r\n//       meetups: dummyData,\r\n//     },\r\n//   };\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  // we are fetching the data directly from the user input form as there is no need to make a trip to the server at this point in time.\r\n\r\n  // connect to the server\r\n  //establish connection, get acces to db, and getting data\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(); // to connect to the meetups db\r\n  const meetupcollection = db.collection(\"meetups\"); // create a data collection called meetup on the server\r\n  // result is an object with an id as one of its properties\r\n  const allresult = await meetupcollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: allresult.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n\r\n    revalidate: 100, //refreshs the page on the server every x seconds if there request are there\r\n  };\r\n}\r\n\r\nexport default StartPage;\r\n"]},"metadata":{},"sourceType":"module"}