{"ast":null,"code":"import { useState } from \"react\";\n\nconst UserInput = validation => {\n  const {\n    0: enteredValue,\n    1: setEnteredValue\n  } = useState('');\n  const {\n    0: isTouced,\n    1: setIsTouched\n  } = useState('');\n  const valueIsValid = validation(enteredValue);\n  const hasError = !valueIsValid && isTouced;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const onfocusHandler = event => {\n    setIsTouched(true);\n  };\n\n  const resetValue = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  }; // Validation object\n\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    onfocusHandler,\n    reset: resetValue\n  };\n};\n\nexport default UserInput;","map":{"version":3,"sources":["A:/Projects/NextJs/Balemoja_Next/Balemoja/components/hooks/user-inputs.js"],"names":["useState","UserInput","validation","enteredValue","setEnteredValue","isTouced","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","onfocusHandler","resetValue","isValid","reset"],"mappings":"AAAA,SAAUA,QAAV,QAA0B,OAA1B;;AAGA,MAAMC,SAAS,GAAIC,UAAD,IAAe;AAC7B,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA2BN,QAAQ,CAAC,EAAD,CAAzC;AAEA,QAAMO,YAAY,GAAGL,UAAU,CAACC,YAAD,CAA/B;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,QAAlC;;AAEA,QAAMI,kBAAkB,GAAIC,KAAD,IAAU;AACjCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAGH,KAAD,IAAW;AAC7BJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMQ,UAAU,GAAG,MAAM;AACrBV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD,CAf6B,CAoB7B;;;AACA,SAAO;AACPM,IAAAA,KAAK,EAACT,YADC;AAEPY,IAAAA,OAAO,EAAGR,YAFH;AAGPC,IAAAA,QAAQ,EAAGA,QAHJ;AAIPC,IAAAA,kBAJO;AAKPI,IAAAA,cALO;AAMPG,IAAAA,KAAK,EAACF;AANC,GAAP;AASH,CA9BD;;AAgCA,eAAeb,SAAf","sourcesContent":["import {  useState } from \"react\";\r\n\r\n\r\nconst UserInput = (validation) =>{\r\n    const [enteredValue, setEnteredValue] = useState(''); \r\n    const [isTouced, setIsTouched] = useState(''); \r\n\r\n    const valueIsValid = validation(enteredValue); \r\n    const hasError = !valueIsValid && isTouced; \r\n\r\n    const valueChangeHandler = (event) =>{\r\n        setEnteredValue(event.target.value);\r\n    }\r\n\r\n    const onfocusHandler =(event) => {\r\n        setIsTouched(true);\r\n    }\r\n\r\n    const resetValue = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false); \r\n    }\r\n\r\n    // Validation object\r\n    return {\r\n    value:enteredValue,\r\n    isValid : valueIsValid,\r\n    hasError : hasError,\r\n    valueChangeHandler,\r\n    onfocusHandler,\r\n    reset:resetValue,\r\n};\r\n\r\n}\r\n\r\nexport default UserInput;"]},"metadata":{},"sourceType":"module"}