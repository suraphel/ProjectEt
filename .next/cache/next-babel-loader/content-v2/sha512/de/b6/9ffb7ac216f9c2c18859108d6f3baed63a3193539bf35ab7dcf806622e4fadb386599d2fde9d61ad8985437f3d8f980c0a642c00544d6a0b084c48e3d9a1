{"ast":null,"code":"// //\n// import { MongoClient, ObjectId } from \"mongodb\";\n// import { Fragment } from \"react\";\n// import MeetupDetail from \"../../components/meetups/MeetupDetails\";\n// // import MeetupDetail from \"../ components/meetups/MeetupDetails\";\n// //\n// function MeetupDetails(props) {\n//   return (\n//     <Fragment>\n//       <Head>\n//         <title>{props.meetupDetails.title}</title>\n//         <meta name=\"description\" content={props.meetupDetails.description} />\n//       </Head>\n//       <MeetupDetail\n//         image={props.meetupData.image}\n//         title={props.meetupData.title}\n//         address={props.meetupData.address}\n//         description={props.meetupData.description}\n//       />\n//     </Fragment>\n//   );\n// }\n// export async function getStaticPaths() {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n//   client.close();\n//   return {\n//     fallback: false, //states if all the pages are predefined / 404\n//     paths: meetups.map((meetup) => ({\n//       params: { meetupId: meetup._id.toString() },\n//     })),\n//   };\n// }\n// export async function getStaticProps(context) {\n//   // fetch data for a single meetup\n//   const meetupId = context.params.meetupId;\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   const selectedMeetup = await meetupsCollection.findOne({\n//     _id: ObjectId(meetupId),\n//   });\n//   client.close();\n//   return {\n//     props: {\n//       meetupData: {\n//         id: selectedMeetup._id.toString(),\n//         title: selectedMeetup.title,\n//         address: selectedMeetup.address,\n//         image: selectedMeetup.image,\n//         description: selectedMeetup.description,\n//       },\n//     },\n//   };\n// }\n// export default MeetupDetails;\n// // import { Fragment } from \"react\";\n// // import MeetupDetails from \"../components/meetups/MeetupDetails\";\n// // import { MongoClient } from \"mongodb\";\n// // function MeetupDetail() {\n// //   return (\n// //     <MeetupDetail\n// //       image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n// //       title=\"First Meetup\"\n// //       address=\"Some Street 5, Some City\"\n// //       description=\"This is a first meetup\"\n// //     />\n// //   );\n// // }\n// // // to assign the data to an ID / path\n// // export async function getStaticPaths() {\n// //   const client = await MongoClient.connect(\n// //     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\n// //   );\n// //   const db = client.db(); // to connect to the meetups db\n// //   const meetupcollection = db.collection(\"testmeetup\");\n// //   const meetups = await meetupcollection.find({}, { _id: 1 }).toArray(); //find({filter search, kike id ..,empty is all},{_id: 1} = only id values)\n// //   client.close();\n// //   return {\n// //     //are all possible key included:return boolean, false = all are listed\n// //     // if not listed  u will get 404\n// //     fallback: false,\n// //     paths: meetups.map((meetup) => ({\n// //       params: { meetupId: meetup._id.toString() },\n// //     })),\n// //     // [m\n// //     //   //dynamically fetching the id values\n// //     //   // {\n// //     //   //   params: {\n// //     //   //     // as in the current case\n// //     //   //     meetupId: \"m1\",\n// //     //   //   },\n// //     //   // },\n// //     //   // {\n// //     //   //   params: {\n// //     //   //     // if we have several ways to the same data\n// //     //   //     meetupId: \"m2\",\n// //     //   //   },\n// //     //   // },\n// //     // ],\n// //   };\n// // }\n// // export async function getStaticProps(context) {\n// //   const meetupId = context.params.meetupId;\n// //   console.log(meetupId);\n// //   return {\n// //     props: {\n// //       meetupData: {\n// //         image:\n// //           \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n// //         id: meetupId,\n// //         title: \"First Meetup\",\n// //         address: \"Some Street 5, Some City\",\n// //         description: \"This is a first meetup\",\n// //       },\n// //     },\n// //   };\n// // }\n// // export default MeetupDetail;\n// // //  image =\n// // //    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\";\n// // //  title = \"Not sure\";\n// // //  address = \"some where on earth\";\n// // //  description = \"Some detail about the page\";\n// //-------------------------------------------------------------------\n// //\n// // import { MongoClient, ObjectId } from \"mongodb\";\n// // import { Fragment } from \"react\";\n// // import MeetupDetail from \"../../components/meetups/MeetupDetails\";\n// // function MeetupDetails(props) {\n// //   return (\n// //     <Fragment>\n// //       <Head>\n// //         <title>{props.meetupDetails.title}</title>\n// //         <meta name=\"description\" content={props.meetupDetails.description} />\n// //       </Head>\n// //       <MeetupDetail\n// //         image={props.meetupData.image}\n// //         title={props.meetupData.title}\n// //         address={props.meetupData.address}\n// //         description={props.meetupData.description}\n// //       />\n// //     </Fragment>\n// //   );\n// // }\n// // export async function getStaticPaths() {\n// //   const client = await MongoClient.connect(\n// //     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\n// //   );\n// //   const db = client.db();\n// //   const meetupsCollection = db.collection(\"meetups\");\n// //   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n// //   client.close();\n// //   return {\n// //     fallback: false, //states if all the pages are predefined / 404\n// //     paths: meetups.map((meetup) => ({\n// //       params: { meetupId: meetup._id.toString() },\n// //     })),\n// //   };\n// // }\n// // export async function getStaticProps(context) {\n// //   // fetch data for a single meetup\n// //   const meetupId = context.params.meetupId;\n// //   const client = await MongoClient.connect(\n// //     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\n// //   );\n// //   const db = client.db();\n// //   const meetupsCollection = db.collection(\"meetups\");\n// //   const selectedMeetup = await meetupsCollection.findOne({\n// //     _id: ObjectId(meetupId),\n// //   });\n// //   client.close();\n// //   return {\n// //     props: {\n// //       meetupData: {\n// //         id: selectedMeetup._id.toString(),\n// //         title: selectedMeetup.title,\n// //         address: selectedMeetup.address,\n// //         image: selectedMeetup.image,\n// //         description: selectedMeetup.description,\n// //       },\n// //     },\n// //   };\n// // }\n// // export default MeetupDetails;","map":{"version":3,"sources":["A:/Projects/NextJs/Balemoja_Next/Balemoja/pages/[meetupId]/index.js"],"names":[],"mappingssourcesContent":["// //\r\n// import { MongoClient, ObjectId } from \"mongodb\";\r\n// import { Fragment } from \"react\";\r\n\r\n// import MeetupDetail from \"../../components/meetups/MeetupDetails\";\r\n\r\n// // import MeetupDetail from \"../ components/meetups/MeetupDetails\";\r\n// //\r\n// function MeetupDetails(props) {\r\n//   return (\r\n//     <Fragment>\r\n//       <Head>\r\n//         <title>{props.meetupDetails.title}</title>\r\n//         <meta name=\"description\" content={props.meetupDetails.description} />\r\n//       </Head>\r\n//       <MeetupDetail\r\n//         image={props.meetupData.image}\r\n//         title={props.meetupData.title}\r\n//         address={props.meetupData.address}\r\n//         description={props.meetupData.description}\r\n//       />\r\n//     </Fragment>\r\n//   );\r\n// }\r\n\r\n// export async function getStaticPaths() {\r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n//   );\r\n//   const db = client.db();\r\n\r\n//   const meetupsCollection = db.collection(\"meetups\");\r\n\r\n//   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n//   client.close();\r\n\r\n//   return {\r\n//     fallback: false, //states if all the pages are predefined / 404\r\n//     paths: meetups.map((meetup) => ({\r\n//       params: { meetupId: meetup._id.toString() },\r\n//     })),\r\n//   };\r\n// }\r\n\r\n// export async function getStaticProps(context) {\r\n//   // fetch data for a single meetup\r\n\r\n//   const meetupId = context.params.meetupId;\r\n\r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n//   );\r\n//   const db = client.db();\r\n\r\n//   const meetupsCollection = db.collection(\"meetups\");\r\n\r\n//   const selectedMeetup = await meetupsCollection.findOne({\r\n//     _id: ObjectId(meetupId),\r\n//   });\r\n\r\n//   client.close();\r\n\r\n//   return {\r\n//     props: {\r\n//       meetupData: {\r\n//         id: selectedMeetup._id.toString(),\r\n//         title: selectedMeetup.title,\r\n//         address: selectedMeetup.address,\r\n//         image: selectedMeetup.image,\r\n//         description: selectedMeetup.description,\r\n//       },\r\n//     },\r\n//   };\r\n// }\r\n\r\n// export default MeetupDetails;\r\n\r\n// // import { Fragment } from \"react\";\r\n// // import MeetupDetails from \"../components/meetups/MeetupDetails\";\r\n\r\n// // import { MongoClient } from \"mongodb\";\r\n\r\n// // function MeetupDetail() {\r\n// //   return (\r\n// //     <MeetupDetail\r\n// //       image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n// //       title=\"First Meetup\"\r\n// //       address=\"Some Street 5, Some City\"\r\n// //       description=\"This is a first meetup\"\r\n// //     />\r\n// //   );\r\n// // }\r\n\r\n// // // to assign the data to an ID / path\r\n// // export async function getStaticPaths() {\r\n// //   const client = await MongoClient.connect(\r\n// //     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n// //   );\r\n// //   const db = client.db(); // to connect to the meetups db\r\n// //   const meetupcollection = db.collection(\"testmeetup\");\r\n// //   const meetups = await meetupcollection.find({}, { _id: 1 }).toArray(); //find({filter search, kike id ..,empty is all},{_id: 1} = only id values)\r\n\r\n// //   client.close();\r\n\r\n// //   return {\r\n// //     //are all possible key included:return boolean, false = all are listed\r\n// //     // if not listed  u will get 404\r\n// //     fallback: false,\r\n// //     paths: meetups.map((meetup) => ({\r\n// //       params: { meetupId: meetup._id.toString() },\r\n// //     })),\r\n// //     // [m\r\n// //     //   //dynamically fetching the id values\r\n\r\n// //     //   // {\r\n// //     //   //   params: {\r\n// //     //   //     // as in the current case\r\n// //     //   //     meetupId: \"m1\",\r\n// //     //   //   },\r\n// //     //   // },\r\n// //     //   // {\r\n// //     //   //   params: {\r\n// //     //   //     // if we have several ways to the same data\r\n// //     //   //     meetupId: \"m2\",\r\n// //     //   //   },\r\n// //     //   // },\r\n// //     // ],\r\n// //   };\r\n// // }\r\n\r\n// // export async function getStaticProps(context) {\r\n// //   const meetupId = context.params.meetupId;\r\n\r\n// //   console.log(meetupId);\r\n\r\n// //   return {\r\n// //     props: {\r\n// //       meetupData: {\r\n// //         image:\r\n// //           \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n// //         id: meetupId,\r\n// //         title: \"First Meetup\",\r\n// //         address: \"Some Street 5, Some City\",\r\n// //         description: \"This is a first meetup\",\r\n// //       },\r\n// //     },\r\n// //   };\r\n// // }\r\n// // export default MeetupDetail;\r\n\r\n// // //  image =\r\n// // //    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\";\r\n// // //  title = \"Not sure\";\r\n// // //  address = \"some where on earth\";\r\n// // //  description = \"Some detail about the page\";\r\n\r\n// //-------------------------------------------------------------------\r\n\r\n// //\r\n// // import { MongoClient, ObjectId } from \"mongodb\";\r\n// // import { Fragment } from \"react\";\r\n\r\n// // import MeetupDetail from \"../../components/meetups/MeetupDetails\";\r\n\r\n// // function MeetupDetails(props) {\r\n// //   return (\r\n// //     <Fragment>\r\n// //       <Head>\r\n// //         <title>{props.meetupDetails.title}</title>\r\n// //         <meta name=\"description\" content={props.meetupDetails.description} />\r\n// //       </Head>\r\n// //       <MeetupDetail\r\n// //         image={props.meetupData.image}\r\n// //         title={props.meetupData.title}\r\n// //         address={props.meetupData.address}\r\n// //         description={props.meetupData.description}\r\n// //       />\r\n// //     </Fragment>\r\n// //   );\r\n// // }\r\n\r\n// // export async function getStaticPaths() {\r\n// //   const client = await MongoClient.connect(\r\n// //     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n// //   );\r\n// //   const db = client.db();\r\n\r\n// //   const meetupsCollection = db.collection(\"meetups\");\r\n\r\n// //   const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n// //   client.close();\r\n\r\n// //   return {\r\n// //     fallback: false, //states if all the pages are predefined / 404\r\n// //     paths: meetups.map((meetup) => ({\r\n// //       params: { meetupId: meetup._id.toString() },\r\n// //     })),\r\n// //   };\r\n// // }\r\n\r\n// // export async function getStaticProps(context) {\r\n// //   // fetch data for a single meetup\r\n\r\n// //   const meetupId = context.params.meetupId;\r\n\r\n// //   const client = await MongoClient.connect(\r\n// //     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n// //   );\r\n// //   const db = client.db();\r\n\r\n// //   const meetupsCollection = db.collection(\"meetups\");\r\n\r\n// //   const selectedMeetup = await meetupsCollection.findOne({\r\n// //     _id: ObjectId(meetupId),\r\n// //   });\r\n\r\n// //   client.close();\r\n\r\n// //   return {\r\n// //     props: {\r\n// //       meetupData: {\r\n// //         id: selectedMeetup._id.toString(),\r\n// //         title: selectedMeetup.title,\r\n// //         address: selectedMeetup.address,\r\n// //         image: selectedMeetup.image,\r\n// //         description: selectedMeetup.description,\r\n// //       },\r\n// //     },\r\n// //   };\r\n// // }\r\n\r\n// // export default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"script"}