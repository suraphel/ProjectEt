{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\Balemoja\\\\pages\\\\AuthForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// LogIn form and validation with firebase\nimport { useState, useRef, useContext } from \"react\";\nimport AuthenticationContext from \"../components/Token/LogInAuthentication \";\nimport classes from \"../components/usersAccount/Auth/AuthForm.module.css\";\nimport { useRouter } from \"next/router\";\nimport Button from \"../components/ui/button/Button\"; // import UserInput from \"../../hooks/user-inputs\";\n\nvar AuthForm = function AuthForm() {\n  _s();\n\n  var _UserInput = UserInput(function (value) {\n    return value.trim() !== \"\";\n  }),\n      username = _UserInput.value,\n      validUsername = _UserInput.isValid,\n      inValidUsername = _UserInput.hasError,\n      UsernameChangeHandler = _UserInput.valueChangeHandler,\n      blurUsername = _UserInput.onfocusHandler,\n      resetUsername = _UserInput.reset;\n\n  var _UserInput2 = UserInput(function (value) {\n    return value.trim() !== \"\";\n  }),\n      password = _UserInput2.value,\n      validPassword = _UserInput2.isValid,\n      inValidPassword = _UserInput2.hasError,\n      PasswordChangeHandler = _UserInput2.valueChangeHandler,\n      blurPassword = _UserInput2.onfocusHandler,\n      resetPassword = _UserInput2.reset;\n\n  var router = useRouter();\n  var usernameInputRef = useRef();\n  var passwordInputRef = useRef(); // const history = useHistory();\n\n  var authCtx = useContext(AuthenticationContext); // validation if needed\n\n  var _useState = useState(true),\n      isLogin = _useState[0],\n      setIsLogin = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var switchAuthModeHandler = function switchAuthModeHandler() {\n    setIsLogin(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    var enteredEmail = usernameInputRef.current.value;\n    var enteredPassword = passwordInputRef.current.value;\n    var url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBILHtgI_IbbZADrPf-oTa-3nJPvIL4qSs\";\n      setLoading(true);\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBILHtgI_IbbZADrPf-oTa-3nJPvIL4qSs\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      setLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(function (data) {\n          //console.log(data);\n          var errorM = data.error.message;\n          throw new Error(errorM); // if a problem look in here\n        });\n      } // Automatic logout based on time\n\n    }).then(function (data) {\n      var expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n      authCtx.login(data.idToken, expirationTime.toISOString());\n      router.push(\"/Gardner\"); // history.replace(\"/\");\n      // Now the user is logged as he has received a tokken.\n      //console.log(data);\n    })[\"catch\"](function (err) {\n      //error source is built-in message form the firebase\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Log in \" : \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: usernameInputRef,\n          required: true,\n          onBlur: blurUsername,\n          onChange: UsernameChangeHandler,\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true,\n          onBlur: blurPassword,\n          onChange: PasswordChangeHandler,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(Button, {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, _this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AuthForm, \"8ZDxDPzXLANbc8Ld9k2lnfITuEQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/Balemoja/pages/AuthForm.js"],"names":["useState","useRef","useContext","AuthenticationContext","classes","useRouter","Button","AuthForm","UserInput","value","trim","username","validUsername","isValid","inValidUsername","hasError","UsernameChangeHandler","valueChangeHandler","blurUsername","onfocusHandler","resetUsername","reset","password","validPassword","inValidPassword","PasswordChangeHandler","blurPassword","resetPassword","router","usernameInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","enteredPassword","url","fetch","method","body","JSON","stringify","email","returnSecureToken","headers","then","res","ok","json","data","errorM","error","message","Error","expirationTime","Date","getTime","expiresIn","login","idToken","toISOString","push","err","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["// LogIn form and validation with firebase\n\nimport { useState, useRef, useContext } from \"react\";\nimport AuthenticationContext from \"../components/Token/LogInAuthentication \";\nimport classes from \"../components/usersAccount/Auth/AuthForm.module.css\";\nimport { useRouter } from \"next/router\";\nimport Button from \"../components/ui/button/Button\";\n// import UserInput from \"../../hooks/user-inputs\";\n\nconst AuthForm = () => {\n  const {\n    value: username,\n    isValid: validUsername,\n    hasError: inValidUsername,\n    valueChangeHandler: UsernameChangeHandler,\n    onfocusHandler: blurUsername,\n    reset: resetUsername,\n  } = UserInput((value) => value.trim() !== \"\");\n\n  const {\n    value: password,\n    isValid: validPassword,\n    hasError: inValidPassword,\n    valueChangeHandler: PasswordChangeHandler,\n    onfocusHandler: blurPassword,\n    reset: resetPassword,\n  } = UserInput((value) => value.trim() !== \"\");\n\n  const router = useRouter();\n\n  const usernameInputRef = useRef();\n  const passwordInputRef = useRef();\n  // const history = useHistory();\n\n  const authCtx = useContext(AuthenticationContext);\n  // validation if needed\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = usernameInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBILHtgI_IbbZADrPf-oTa-3nJPvIL4qSs\";\n\n      setLoading(true);\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBILHtgI_IbbZADrPf-oTa-3nJPvIL4qSs\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            //console.log(data);\n            const errorM = data.error.message;\n            throw new Error(errorM); // if a problem look in here\n          });\n        }\n        // Automatic logout based on time\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        router.push(\"/Gardner\");\n\n        // history.replace(\"/\");\n        // Now the user is logged as he has received a tokken.\n        //console.log(data);\n      })\n      .catch((err) => {\n        //error source is built-in message form the firebase\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      {/*option b/n login or signUp  */}\n      <h1>{isLogin ? \"Log in \" : \"Sign up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            ref={usernameInputRef}\n            required\n            onBlur={blurUsername}\n            onChange={UsernameChangeHandler}\n            value={username}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            ref={passwordInputRef}\n            required\n            onBlur={blurPassword}\n            onChange={PasswordChangeHandler}\n            value={password}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <Button>{isLogin ? \"Login\" : \"Create Account\"}</Button>\n          )}\n          {isLoading && <p>Loading...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}