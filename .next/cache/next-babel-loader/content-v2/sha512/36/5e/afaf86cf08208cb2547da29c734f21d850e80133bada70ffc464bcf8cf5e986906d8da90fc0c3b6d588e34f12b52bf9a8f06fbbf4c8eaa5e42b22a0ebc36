{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\",\n    _this = this;\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport RoutingPage from \"../components/RoutingPage\";\nimport LoginNavigation from \"../components/userAccount/components/Layout/LoginNavigation\";\nimport FetchingFromDB from \"./FetchingFromDB\";\nimport SearchBar from \"./SearchBar\";\nimport SecurityService from \"./SecurityService\"; //empty dependcies array[] means it will only run once when the component is rendered and never there after\n// an array of input items\n\nvar dummyData = [{\n  id: \"m1\",\n  image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\",\n  title: \"HomePage\",\n  address: \"Ethiopia\"\n}, {\n  id: \"m2\",\n  image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\",\n  title: \"Lalibela\",\n  address: \"Ethiopia\"\n}];\n\nvar StartPage = function StartPage(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n}; //reserver name\n//SAFE:: code written in here will only run on the server side.\n//will updata the page every time there is a request.\n// export async function getServerSideProps(context) {\n//   const request = context.req;\n//   const responce = context.res;\n//   // Get the data from any where API or .....\n//   // Always returns an object\n//   return {\n//     props: {\n//       meetups: dummyData,\n//     },\n//   };\n// }\n\n\n_c = StartPage;\nexport var __N_SSG = true;\nexport default StartPage;\n{\n  /* <LoginNavigation /> */\n}\n{\n  /* <RoutingPage /> */\n}\n{\n  /* <SearchBar /> */\n}\n{\n  /* <Gardner /> */\n}\n{\n  /* <HouseCleaner />\r\n            <HouseHelp/> */\n}\n{\n  /* <SecurityService />\r\n      <FetchingFromDB />  */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","RoutingPage","LoginNavigation","FetchingFromDB","SearchBar","SecurityService","dummyData","id","image","title","address","StartPage","props","meetups"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAGA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,eAAP,MAA4B,6DAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;AAEA;;AACA,IAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EACH,qGAHJ;AAIEC,EAAAA,KAAK,EAAE,UAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CADgB,EAQhB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EACH,qGAHJ;AAIEC,EAAAA,KAAK,EAAE,UAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CARgB,CAAlB;;AAiBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAND,C,CAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAtBMF,S;;AAmDN,eAAeA,SAAf;AAEA;AACE;AACD;AACD;AACE;AACD;AACD;AACE;AACD;AACD;AACE;AACD;AACD;AACE;AACF;AACC;AACD;AACE;AACF;AACC","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport RoutingPage from \"../components/RoutingPage\";\r\nimport LoginNavigation from \"../components/userAccount/components/Layout/LoginNavigation\";\r\nimport FetchingFromDB from \"./FetchingFromDB\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SecurityService from \"./SecurityService\";\r\n\r\n//empty dependcies array[] means it will only run once when the component is rendered and never there after\r\n\r\n// an array of input items\r\nconst dummyData = [\r\n  {\r\n    id: \"m1\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\",\r\n    title: \"HomePage\",\r\n    address: \"Ethiopia\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\",\r\n    title: \"Lalibela\",\r\n    address: \"Ethiopia\",\r\n  },\r\n];\r\n\r\nconst StartPage = (props) => {\r\n  return (\r\n    <div>\r\n      <MeetupList meetups={props.meetups} />\r\n    </div>\r\n  );\r\n};\r\n\r\n//reserver name\r\n//SAFE:: code written in here will only run on the server side.\r\n\r\n//will updata the page every time there is a request.\r\n// export async function getServerSideProps(context) {\r\n//   const request = context.req;\r\n//   const responce = context.res;\r\n//   // Get the data from any where API or .....\r\n//   // Always returns an object\r\n//   return {\r\n//     props: {\r\n//       meetups: dummyData,\r\n//     },\r\n//   };\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  // we are fetching the data directly from the user input form as there is no need to make a trip to the server at this point in time.\r\n\r\n  // connect to the server\r\n  //establish connection, get acces to db, and getting data\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(); // to connect to the meetups db\r\n  const meetupcollection = db.collection(\"testmeetup\"); // create a collection called meetup\r\n  // result is an object with an id as one of its properties\r\n  const allresult = await meetupcollection.find().toArray();\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: allresult.map((meetup) => ({\r\n        title: allresult.title,\r\n        address: allresult.address,\r\n        image: allresult.image,\r\n        // ids: allresult._id.toString(),\r\n      })),\r\n    },\r\n    //refreshs the page on the server every x seconds if there request are there\r\n    revalidate: 10000,\r\n  };\r\n}\r\n\r\nexport default StartPage;\r\n\r\n{\r\n  /* <LoginNavigation /> */\r\n}\r\n{\r\n  /* <RoutingPage /> */\r\n}\r\n{\r\n  /* <SearchBar /> */\r\n}\r\n{\r\n  /* <Gardner /> */\r\n}\r\n{\r\n  /* <HouseCleaner />\r\n            <HouseHelp/> */\r\n}\r\n{\r\n  /* <SecurityService />\r\n      <FetchingFromDB />  */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}