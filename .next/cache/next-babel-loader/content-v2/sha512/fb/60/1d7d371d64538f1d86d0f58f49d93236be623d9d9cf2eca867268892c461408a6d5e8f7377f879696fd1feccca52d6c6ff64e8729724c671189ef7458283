{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\FetchingFromDB.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ChoresList from '../components/dataFlow/choreregistreation/choreList'; // import Addchoresform from '../choreregistreation/AddChoresForm';\n// import '../../App.css';\n\nfunction FetchingFromDB() {\n  _s();\n\n  var _useState = useState([]),\n      chores = _useState[0],\n      setchores = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var fetchchoresHandler = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, data, loadedChores, key;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            setError(null);\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/Chores.json');\n\n          case 5:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error('Something new has gone wrong!');\n\n          case 8:\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            data = _context.sent;\n            // console.log(data); //  data is here an object, Id = keys and  \n            loadedChores = [];\n\n            for (key in data) {\n              loadedChores.push({\n                id: key,\n                descriptionData: data[key].descriptionData,\n                introData: data[key].introData // introData: data[key].introData\n\n              });\n            }\n\n            setchores(loadedChores);\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n\n          case 19:\n            setIsLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 16]]);\n  })), []);\n  useEffect(function () {\n    fetchchoresHandler();\n  }, [fetchchoresHandler]); // time to upload to the fire base db \n  // async function AddchoreHandler(choreDataObject) {\n  // \tconst responce = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/names.json', \n  // \t{\n  // \t\tmethod:'POST',\n  // \t\tbody:JSON.stringify(choreDataObject),\n  // \t\theaders:{\n  // \t\t\t'Content-Type' : 'application/json'}\t\t\n  // \t\t}\n  // \t);\n  // \tconst data = await responce.json();\n  // \tconsole.log(data); \n  // }\n\n  var content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no chores.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 16\n  }, this);\n\n  if (chores.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(ChoresList, {\n      chores: chores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchchoresHandler,\n        children: \"Fetch chores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n}\n\n_s(FetchingFromDB, \"NchXGrUd56mdpLJgP02qW4SsGxY=\");\n\n_c = FetchingFromDB;\nexport default FetchingFromDB;\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport ChoresList from '../companyregistration/CompanyList';\r\n\r\n\r\nfunction FetchingFromDB() {\r\n\t const [chores, setChore ] = useState([]);\r\n\t const [isLoading, setIsLoading] = useState(false);\r\n\t const [error, setError] = useState(null);\r\n\r\n\tconst fetchChoreHandler = useCallback(async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/names.json');\r\n\t\t\tif (!response.ok) {\r\n\t\t\t  throw new Error('Something went wrong!');\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tconst disectedData = [];\r\n\r\n\t\t\tfor(const key in data){\r\n\t\t\t\tdisectedData.push({\r\n\t\t\t\t\tid:key,\r\n\t\t\t\t\tdescriptionData:data[key].descriptionData, \r\n\t\t\t\t\tintroData:data[key].introData,\r\n\t\t\t\t})\r\n\t\t\t}\t\r\n\r\n\t\t\tsetChore(disectedData);\r\n\t\t} \r\n\t\tcatch (error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tfetchChoreHandler();\r\n\t// \t},\r\n\t// \t[ fetchChoreHandler ]\r\n\t// );\r\n\r\n\r\n\tlet content = <p>Found no chores.</p>;\r\n\r\n\tif (chores.length > 0) {\r\n\t\tcontent = <ChoresList chores={chores} />;\r\n\t}\r\n\r\n\tif (error) {\r\n\t\tcontent = <p>{error}</p>;\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\tcontent = <p>Loading...</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\r\n\t\t\t<section>\r\n\t\t\t\t<button onClick={fetchChoreHandler}>Fetch Chores</button>\r\n\t\t\t</section>\r\n\t\t\t<section>{content}</section>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default FetchingFromDB();\r\n\r\n\r\n\r\n\r\n//import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport ChoresList from './components/ChoresList'\r\nimport Addchore from './components/Addchore';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\t const [ chores, setchores ] = useState([]);\r\n\t const [isLoading, setIsLoading] = useState(false);\r\n\t const [error, setError] = useState(null);\r\n\r\n\tconst fetchchoresHandler = useCallback(async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null);\r\n\t\ttry {\t\t\r\n\t\t\tconst response = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/names.json');\r\n\t\t\tif (!response.ok) {\r\n\t\t\t  throw new Error('Something new has gone wrong!');\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\t// console.log(data); //  data is here an object, Id = keys and  \r\n\r\n\t\t\tconst loadedChores = []; \r\n\r\n\t\t\tfor(const key in data){\r\n\t\t\t\tloadedChores.push({\r\n\t\t\t\t\tid:key,\r\n\t\t\t\t\ttitle: data[key].title, \r\n\t\t\t\t\topeningText: data[key].openingText, \r\n\t\t\t\t\treleaseDate: data[key].releaseDate\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tsetchores(loadedChores);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchchoresHandler();\r\n\t\t},\r\n\t\t[ fetchchoresHandler ]\r\n\t);\r\n\r\n\t// time to upload to the fire base db \r\n\t// async function AddchoreHandler(choreData) {\r\n\t// \tconst responce = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/names.json', \r\n\t// \t{\r\n\t// \t\tmethod:'POST',\r\n\t// \t\tbody:JSON.stringify(choreData),\r\n\t// \t\theaders:{\r\n\t// \t\t\t'Content-Type' : 'application/json'}\t\t\r\n\t// \t\t}\r\n\t// \t);\r\n\t// \tconst data = await responce.json();\r\n\t// \tconsole.log(data); \r\n\t// }\r\n\r\n\tlet content = <p>Found no chores.</p>;\r\n\r\n\tif (chores.length > 0) {\r\n\t\tcontent = <ChoresList chores={chores} />;\r\n\t}\r\n\r\n\tif (error) {\r\n\t\tcontent = <p>{error}</p>;\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\tcontent = <p>Loading...</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<section>\r\n\t\t\t\t <Addchore onAddchore={AddchoreHandler} /> \r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\r\n\t\t\t\t<button onClick={fetchchoresHandler}>Fetch chores</button>\r\n\t\t\t</section>\r\n\t\t\t<section>{content}</section>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\nexport default App;\r\n\r\n*/\n\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport choresList from './components/choresList';\r\nimport Addchore from './components/Addchore';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [ chores, setchores ] = useState([]);\r\n\t const [isLoading, setIsLoading] = useState(false);\r\n\t const [error, setError] = useState(null);\r\n\r\n\tconst fetchchoresHandler = useCallback(async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://swapi.dev/api/films');\r\n\t\t\tif (!response.ok) {\r\n\t\t\t  throw new Error('Something went wrong!');\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tconst transformedchores = data.results.map((choreData) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: choreData.episode_id,\r\n\t\t\t\t\ttitle: choreData.director,\r\n\t\t\t\t\topeningText: choreData.opening_crawl,\r\n\t\t\t\t\treleaseDate: choreData.release_date\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tsetchores(transformedchores);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchchoresHandler();\r\n\t\t},\r\n\t\t[ fetchchoresHandler ]\r\n\t);\r\n\r\n\tfunction AddchoreHandler(chore) {\r\n\t\tconsole.log(chore);\r\n\t}\r\n\r\n\tlet content = <p>Found no chores.</p>;\r\n\r\n\tif (chores.length > 0) {\r\n\t\tcontent = <choresList chores={chores} />;\r\n\t}\r\n\r\n\tif (error) {\r\n\t\tcontent = <p>{error}</p>;\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\tcontent = <p>Loading...</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<section>\r\n\t\t\t\t<Addchore onAddchore={AddchoreHandler} />\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<button onClick={fetchchoresHandler}>Fetch chores</button>\r\n\t\t\t</section>\r\n\t\t\t<section>{content}</section>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchingFromDB\");","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/pages/FetchingFromDB.js"],"names":["React","useState","useEffect","useCallback","ChoresList","FetchingFromDB","chores","setchores","isLoading","setIsLoading","error","setError","fetchchoresHandler","fetch","response","ok","Error","json","data","loadedChores","key","push","id","descriptionData","introData","message","content","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAOC,UAAP,MAAuB,qDAAvB,C,CACA;AACA;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAAA,kBACMJ,QAAQ,CAAC,EAAD,CADd;AAAA,MAChBK,MADgB;AAAA,MACRC,SADQ;;AAAA,mBAEUN,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEjBO,SAFiB;AAAA,MAENC,YAFM;;AAAA,mBAGER,QAAQ,CAAC,IAAD,CAHV;AAAA,MAGjBS,KAHiB;AAAA,MAGVC,QAHU;;AAKzB,MAAMC,kBAAkB,GAAGT,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACtCM,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,YAAAA,QAAQ,CAAC,IAAD,CAAR;AAFsC;AAAA;AAAA,mBAIdE,KAAK,CAAC,kFAAD,CAJS;;AAAA;AAI/BC,YAAAA,QAJ+B;;AAAA,gBAKhCA,QAAQ,CAACC,EALuB;AAAA;AAAA;AAAA;;AAAA,kBAM7B,IAAIC,KAAJ,CAAU,+BAAV,CAN6B;;AAAA;AAAA;AAAA,mBASlBF,QAAQ,CAACG,IAAT,EATkB;;AAAA;AAS/BC,YAAAA,IAT+B;AAUrC;AAEMC,YAAAA,YAZ+B,GAYhB,EAZgB;;AAcrC,iBAAUC,GAAV,IAAiBF,IAAjB,EAAsB;AACrBC,cAAAA,YAAY,CAACE,IAAb,CAAkB;AACjBC,gBAAAA,EAAE,EAACF,GADc;AAEjBG,gBAAAA,eAAe,EAACL,IAAI,CAACE,GAAD,CAAJ,CAAUG,eAFT;AAGjBC,gBAAAA,SAAS,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI,SAHJ,CAIjB;;AAJiB,eAAlB;AAMA;;AAEDjB,YAAAA,SAAS,CAACY,YAAD,CAAT;AAvBqC;AAAA;;AAAA;AAAA;AAAA;AAyBrCR,YAAAA,QAAQ,CAAC,YAAMc,OAAP,CAAR;;AAzBqC;AA2BtChB,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AA3BsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IA4BnC,EA5BmC,CAAtC;AA8BAP,EAAAA,SAAS,CACR,YAAM;AACLU,IAAAA,kBAAkB;AAClB,GAHO,EAIR,CAAEA,kBAAF,CAJQ,CAAT,CAnCyB,CA0CzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIc,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAIpB,MAAM,CAACqB,MAAP,GAAgB,CAApB,EAAuB;AACtBD,IAAAA,OAAO,gBAAG,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEpB;AAApB;AAAA;AAAA;AAAA;AAAA,YAAV;AACA;;AAED,MAAII,KAAJ,EAAW;AACVgB,IAAAA,OAAO,gBAAG;AAAA,gBAAIhB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACA;;AAED,MAAIF,SAAJ,EAAe;AACdkB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACA;;AAED,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,4BAIC;AAAA,6BAEC;AAAQ,QAAA,OAAO,EAAEd,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,YAJD,eAQC;AAAA,gBAAUc;AAAV;AAAA;AAAA;AAAA;AAAA,YARD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GAlFQrB,c;;KAAAA,c;AAoFT,eAAeA,cAAfsourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport ChoresList from '../components/dataFlow/choreregistreation/choreList'\r\n// import Addchoresform from '../choreregistreation/AddChoresForm';\r\n// import '../../App.css';\r\n\r\nfunction FetchingFromDB() {\r\n\t const [ chores, setchores ] = useState([]);\r\n\t const [isLoading, setIsLoading] = useState(false);\r\n\t const [error, setError] = useState(null);\r\n\r\n\tconst fetchchoresHandler = useCallback(async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null);\r\n\t\ttry {\t\t\r\n\t\t\tconst response = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/Chores.json');\r\n\t\t\tif (!response.ok) {\r\n\t\t\t  throw new Error('Something new has gone wrong!');\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\t// console.log(data); //  data is here an object, Id = keys and  \r\n\r\n\t\t\tconst loadedChores = []; \r\n\r\n\t\t\tfor(const key in data){\r\n\t\t\t\tloadedChores.push({\r\n\t\t\t\t\tid:key,\r\n\t\t\t\t\tdescriptionData:data[key].descriptionData, \r\n\t\t\t\t\tintroData: data[key].introData, \r\n\t\t\t\t\t// introData: data[key].introData\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetchores(loadedChores);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchchoresHandler();\r\n\t\t},\r\n\t\t[ fetchchoresHandler ]\r\n\t);\r\n\r\n\t// time to upload to the fire base db \r\n\t// async function AddchoreHandler(choreDataObject) {\r\n\t// \tconst responce = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/names.json', \r\n\t// \t{\r\n\t// \t\tmethod:'POST',\r\n\t// \t\tbody:JSON.stringify(choreDataObject),\r\n\t// \t\theaders:{\r\n\t// \t\t\t'Content-Type' : 'application/json'}\t\t\r\n\t// \t\t}\r\n\t// \t);\r\n\t// \tconst data = await responce.json();\r\n\t// \tconsole.log(data); \r\n\t// }\r\n\r\n\tlet content = <p>Found no chores.</p>;\r\n\r\n\tif (chores.length > 0) {\r\n\t\tcontent = <ChoresList chores={chores} />;\r\n\t}\r\n\r\n\tif (error) {\r\n\t\tcontent = <p>{error}</p>;\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\tcontent = <p>Loading...</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{/* <section>\r\n\t\t\t\t<Addchoresform onAddchoresform={AddchoreHandler} />\r\n\t\t\t</section> */}\r\n\t\t\t<section>\r\n\t\t\t {/* Refreshs the page */}\r\n\t\t\t\t<button onClick={fetchchoresHandler}>Fetch chores</button>\r\n\t\t\t</section>\r\n\t\t\t<section>{content}</section>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default FetchingFromDB;\r\n\r\n\r\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport ChoresList from '../companyregistration/CompanyList';\r\n\r\n\r\nfunction FetchingFromDB() {\r\n\t const [chores, setChore ] = useState([]);\r\n\t const [isLoading, setIsLoading] = useState(false);\r\n\t const [error, setError] = useState(null);\r\n\r\n\tconst fetchChoreHandler = useCallback(async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/names.json');\r\n\t\t\tif (!response.ok) {\r\n\t\t\t  throw new Error('Something went wrong!');\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tconst disectedData = [];\r\n\r\n\t\t\tfor(const key in data){\r\n\t\t\t\tdisectedData.push({\r\n\t\t\t\t\tid:key,\r\n\t\t\t\t\tdescriptionData:data[key].descriptionData, \r\n\t\t\t\t\tintroData:data[key].introData,\r\n\t\t\t\t})\r\n\t\t\t}\t\r\n\r\n\t\t\tsetChore(disectedData);\r\n\t\t} \r\n\t\tcatch (error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tfetchChoreHandler();\r\n\t// \t},\r\n\t// \t[ fetchChoreHandler ]\r\n\t// );\r\n\r\n\r\n\tlet content = <p>Found no chores.</p>;\r\n\r\n\tif (chores.length > 0) {\r\n\t\tcontent = <ChoresList chores={chores} />;\r\n\t}\r\n\r\n\tif (error) {\r\n\t\tcontent = <p>{error}</p>;\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\tcontent = <p>Loading...</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\r\n\t\t\t<section>\r\n\t\t\t\t<button onClick={fetchChoreHandler}>Fetch Chores</button>\r\n\t\t\t</section>\r\n\t\t\t<section>{content}</section>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default FetchingFromDB();\r\n\r\n\r\n\r\n\r\n//import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport ChoresList from './components/ChoresList'\r\nimport Addchore from './components/Addchore';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\t const [ chores, setchores ] = useState([]);\r\n\t const [isLoading, setIsLoading] = useState(false);\r\n\t const [error, setError] = useState(null);\r\n\r\n\tconst fetchchoresHandler = useCallback(async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null);\r\n\t\ttry {\t\t\r\n\t\t\tconst response = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/names.json');\r\n\t\t\tif (!response.ok) {\r\n\t\t\t  throw new Error('Something new has gone wrong!');\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\t// console.log(data); //  data is here an object, Id = keys and  \r\n\r\n\t\t\tconst loadedChores = []; \r\n\r\n\t\t\tfor(const key in data){\r\n\t\t\t\tloadedChores.push({\r\n\t\t\t\t\tid:key,\r\n\t\t\t\t\ttitle: data[key].title, \r\n\t\t\t\t\topeningText: data[key].openingText, \r\n\t\t\t\t\treleaseDate: data[key].releaseDate\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tsetchores(loadedChores);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchchoresHandler();\r\n\t\t},\r\n\t\t[ fetchchoresHandler ]\r\n\t);\r\n\r\n\t// time to upload to the fire base db \r\n\t// async function AddchoreHandler(choreData) {\r\n\t// \tconst responce = await fetch('https://balmoja-49d90-default-rtdb.europe-west1.firebasedatabase.app/names.json', \r\n\t// \t{\r\n\t// \t\tmethod:'POST',\r\n\t// \t\tbody:JSON.stringify(choreData),\r\n\t// \t\theaders:{\r\n\t// \t\t\t'Content-Type' : 'application/json'}\t\t\r\n\t// \t\t}\r\n\t// \t);\r\n\t// \tconst data = await responce.json();\r\n\t// \tconsole.log(data); \r\n\t// }\r\n\r\n\tlet content = <p>Found no chores.</p>;\r\n\r\n\tif (chores.length > 0) {\r\n\t\tcontent = <ChoresList chores={chores} />;\r\n\t}\r\n\r\n\tif (error) {\r\n\t\tcontent = <p>{error}</p>;\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\tcontent = <p>Loading...</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<section>\r\n\t\t\t\t <Addchore onAddchore={AddchoreHandler} /> \r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\r\n\t\t\t\t<button onClick={fetchchoresHandler}>Fetch chores</button>\r\n\t\t\t</section>\r\n\t\t\t<section>{content}</section>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\nexport default App;\r\n\r\n*/\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport choresList from './components/choresList';\r\nimport Addchore from './components/Addchore';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [ chores, setchores ] = useState([]);\r\n\t const [isLoading, setIsLoading] = useState(false);\r\n\t const [error, setError] = useState(null);\r\n\r\n\tconst fetchchoresHandler = useCallback(async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://swapi.dev/api/films');\r\n\t\t\tif (!response.ok) {\r\n\t\t\t  throw new Error('Something went wrong!');\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tconst transformedchores = data.results.map((choreData) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: choreData.episode_id,\r\n\t\t\t\t\ttitle: choreData.director,\r\n\t\t\t\t\topeningText: choreData.opening_crawl,\r\n\t\t\t\t\treleaseDate: choreData.release_date\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tsetchores(transformedchores);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetchchoresHandler();\r\n\t\t},\r\n\t\t[ fetchchoresHandler ]\r\n\t);\r\n\r\n\tfunction AddchoreHandler(chore) {\r\n\t\tconsole.log(chore);\r\n\t}\r\n\r\n\tlet content = <p>Found no chores.</p>;\r\n\r\n\tif (chores.length > 0) {\r\n\t\tcontent = <choresList chores={chores} />;\r\n\t}\r\n\r\n\tif (error) {\r\n\t\tcontent = <p>{error}</p>;\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\tcontent = <p>Loading...</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<section>\r\n\t\t\t\t<Addchore onAddchore={AddchoreHandler} />\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<button onClick={fetchchoresHandler}>Fetch chores</button>\r\n\t\t\t</section>\r\n\t\t\t<section>{content}</section>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}