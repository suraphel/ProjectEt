{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nvar UserInput = function UserInput(validation) {\n  _s();\n\n  var _useState = useState(''),\n      enteredValue = _useState[0],\n      setEnteredValue = _useState[1];\n\n  var _useState2 = useState(''),\n      isTouced = _useState2[0],\n      setIsTouched = _useState2[1];\n\n  var valueIsValid = validation(enteredValue);\n  var hasError = !valueIsValid && isTouced;\n\n  var valueChangeHandler = function valueChangeHandler(event) {\n    setEnteredValue(event.target.value);\n  };\n\n  var onfocusHandler = function onfocusHandler(event) {\n    setIsTouched(true);\n  };\n\n  var resetValue = function resetValue() {\n    setEnteredValue('');\n    setIsTouched(false);\n  }; // Validation object\n\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler: valueChangeHandler,\n    onfocusHandler: onfocusHandler,\n    reset: resetValue\n  };\n};\n\n_s(UserInput, \"YcV81ndBL57qo331+I92Rjr7T7A=\");\n\n_c = UserInput;\nexport default UserInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInput\");","map":{"version":3,"sources":["A:/Projects/NextJs/Balemoja_Next/Balemoja/components/hooks/user-inputs.js"],"names":["useState","UserInput","validation","enteredValue","setEnteredValue","isTouced","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","onfocusHandler","resetValue","isValid","reset"],"mappings":";;AAAA,SAAUA,QAAV,QAA0B,OAA1B;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,UAAD,EAAe;AAAA;;AAAA,kBACWF,QAAQ,CAAC,EAAD,CADnB;AAAA,MACtBG,YADsB;AAAA,MACRC,eADQ;;AAAA,mBAEIJ,QAAQ,CAAC,EAAD,CAFZ;AAAA,MAEtBK,QAFsB;AAAA,MAEZC,YAFY;;AAI7B,MAAMC,YAAY,GAAGL,UAAU,CAACC,YAAD,CAA/B;AACA,MAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,QAAlC;;AAEA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAU;AACjCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAIA,MAAMC,cAAc,GAAE,SAAhBA,cAAgB,CAACH,KAAD,EAAW;AAC7BJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD,CAf6B,CAoB7B;;;AACA,SAAO;AACPM,IAAAA,KAAK,EAACT,YADC;AAEPY,IAAAA,OAAO,EAAGR,YAFH;AAGPC,IAAAA,QAAQ,EAAGA,QAHJ;AAIPC,IAAAA,kBAAkB,EAAlBA,kBAJO;AAKPI,IAAAA,cAAc,EAAdA,cALO;AAMPG,IAAAA,KAAK,EAACF;AANC,GAAP;AASH,CA9BD;;GAAMb,S;;KAAAA,S;AAgCN,eAAeA,SAAf","sourcesContent":["import {  useState } from \"react\";\r\n\r\n\r\nconst UserInput = (validation) =>{\r\n    const [enteredValue, setEnteredValue] = useState(''); \r\n    const [isTouced, setIsTouched] = useState(''); \r\n\r\n    const valueIsValid = validation(enteredValue); \r\n    const hasError = !valueIsValid && isTouced; \r\n\r\n    const valueChangeHandler = (event) =>{\r\n        setEnteredValue(event.target.value);\r\n    }\r\n\r\n    const onfocusHandler =(event) => {\r\n        setIsTouched(true);\r\n    }\r\n\r\n    const resetValue = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false); \r\n    }\r\n\r\n    // Validation object\r\n    return {\r\n    value:enteredValue,\r\n    isValid : valueIsValid,\r\n    hasError : hasError,\r\n    valueChangeHandler,\r\n    onfocusHandler,\r\n    reset:resetValue,\r\n};\r\n\r\n}\r\n\r\nexport default UserInput;"]},"metadata":{},"sourceType":"module"}