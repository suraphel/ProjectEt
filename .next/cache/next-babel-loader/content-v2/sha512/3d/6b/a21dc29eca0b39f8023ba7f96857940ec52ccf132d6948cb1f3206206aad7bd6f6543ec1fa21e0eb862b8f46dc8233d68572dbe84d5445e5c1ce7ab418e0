{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\06-onwards-to-a-bigger-project-starting-project\\\\components\\\\dataFlow\\\\companyregistration\\\\AddCompaniesForm.js\";\n// import  {useRef} from 'react'\n// import  './AddCompanies.css'; \nimport UserInput from '../../hooks/user-inputs';\n\nfunction AddCompaniesForm(props) {\n  var _UserInput = UserInput(function (value) {\n    return value.trim() !== '';\n  }),\n      companyname = _UserInput.value,\n      validcompname = _UserInput.isValid,\n      inValidcompname = _UserInput.hasError,\n      compnameChangeHandler = _UserInput.valueChangeHandler,\n      blurcompname = _UserInput.onfocusHandler,\n      resetcompanyname = _UserInput.reset;\n\n  var _UserInput2 = UserInput(function (value) {\n    return value.trim() !== '';\n  }),\n      contactperson = _UserInput2.value,\n      validcontactperson = _UserInput2.isValid,\n      inValidcontactperson = _UserInput2.hasError,\n      contactpersonChangeHandler = _UserInput2.valueChangeHandler,\n      blurcontactperson = _UserInput2.onfocusHandler,\n      resetcontactperson = _UserInput2.reset;\n\n  var _UserInput3 = UserInput(function (value) {\n    return value.trim() !== '';\n  }),\n      tele = _UserInput3.value,\n      validtele = _UserInput3.isValid,\n      inValidtele = _UserInput3.hasError,\n      teleChangeHandler = _UserInput3.valueChangeHandler,\n      blurtele = _UserInput3.onfocusHandler,\n      resettele = _UserInput3.reset;\n\n  var formValidation = false;\n\n  if (validcompname && validcontactperson && validtele) {\n    formValidation = true;\n  } // const companyname = useRef(); \n  // const contactperson = useRef();\n  // const telephone = useRef(); \n\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n\n    if (!formValidation) {\n      return;\n    } // console.log(companyname,contactperson,tele);  \n\n\n    var companyDataObject = {\n      companyname: companyname,\n      contactperson: contactperson,\n      tele: tele\n    };\n    props.onAddcompaniesform(companyDataObject);\n    resetcompanyname('');\n    resetcontactperson('');\n    resettele(''); // const items = {\n    //   name: companyname.current.value,\n    //   cperson: contactperson.current.value,\n    //   sname: telephone.current.value}        \n  }; // const items = {\n  //   name :companyname.current.value,\n  //   cperson: contactperson.current.value,\n  //   sname :telephone.current.value  \n  // }  \n\n\n  var nameInputClasses = inValidcompname ? 'form-control invalid' : 'form-control ';\n  var contactInputClasses = inValidcontactperson ? 'form-control invalid' : 'form-control ';\n  var teleInputClasses = inValidtele ? 'form-control invalid' : 'form-control ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"compname\",\n          children: \" Company Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"compname\" // ref={companyname}\n          ,\n          onBlur: blurcompname,\n          onChange: compnameChangeHandler,\n          value: companyname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), inValidcompname && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please fill in a valid name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: contactInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contperson\",\n          children: \" Contact Person \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"contperson\" // ref={contactperson}\n          ,\n          value: contactperson,\n          onBlur: blurcontactperson,\n          onChange: contactpersonChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), inValidcompname && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a valid Contact Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: teleInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tel\",\n          children: \" Telephone \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"tel\" // ref={telephone} \n          ,\n          value: tele,\n          onBlur: blurtele,\n          onChange: teleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), inValidcompname && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a valid Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Add Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 4\n  }, this);\n}\n\n_c = AddCompaniesForm;\nexport default AddCompaniesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCompaniesForm\");","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/components/dataFlow/companyregistration/AddCompaniesForm.js"],"names":["UserInput","AddCompaniesForm","props","value","trim","companyname","validcompname","isValid","inValidcompname","hasError","compnameChangeHandler","valueChangeHandler","blurcompname","onfocusHandler","resetcompanyname","reset","contactperson","validcontactperson","inValidcontactperson","contactpersonChangeHandler","blurcontactperson","resetcontactperson","tele","validtele","inValidtele","teleChangeHandler","blurtele","resettele","formValidation","submitHandler","event","preventDefault","companyDataObject","onAddcompaniesform","nameInputClasses","contactInputClasses","teleInputClasses"],"mappings":"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","sourcesContent":["\r\n\r\n// import  {useRef} from 'react'\r\n// import  './AddCompanies.css'; \r\nimport UserInput  from '../../hooks/user-inputs';\r\n\r\nfunction AddCompaniesForm(props) {\r\n  const {\r\n    value:companyname, \r\n    isValid: validcompname,\r\n    hasError: inValidcompname,\r\n    valueChangeHandler: compnameChangeHandler,\r\n    onfocusHandler: blurcompname,\r\n    reset:resetcompanyname\r\n  } = UserInput(value => value.trim() !== '')\r\n\r\n\r\n    const {\r\n    value:contactperson, \r\n    isValid: validcontactperson,\r\n    hasError: inValidcontactperson,\r\n    valueChangeHandler: contactpersonChangeHandler,\r\n    onfocusHandler: blurcontactperson,\r\n    reset:resetcontactperson\r\n  } = UserInput(value => value.trim() !== '')\r\n\r\n    const {\r\n    value:tele, \r\n    isValid: validtele,\r\n    hasError: inValidtele,\r\n    valueChangeHandler: teleChangeHandler,\r\n    onfocusHandler: blurtele,\r\n    reset:resettele\r\n  } = UserInput(value => value.trim() !== '')\r\n\r\n\r\n    let formValidation = false; \r\n    if(validcompname && validcontactperson && validtele){\r\n      formValidation = true; \r\n    }\r\n\r\n\r\n    // const companyname = useRef(); \r\n    // const contactperson = useRef();\r\n    // const telephone = useRef(); \r\n\r\n    const submitHandler =(event)=>{\r\n      event.preventDefault();\r\n\r\n\r\n      if(!formValidation){\r\n        return;\r\n      }\r\n\r\n      // console.log(companyname,contactperson,tele);  \r\n      \r\n      const companyDataObject = {\r\n        companyname,contactperson,tele\r\n      }; \r\n\r\n      props.onAddcompaniesform(companyDataObject);\r\n\r\n      resetcompanyname('');\r\n      resetcontactperson(''); \r\n      resettele('');\r\n\r\n\r\n    // const items = {\r\n    //   name: companyname.current.value,\r\n    //   cperson: contactperson.current.value,\r\n    //   sname: telephone.current.value}        \r\n}\r\n\r\n    // const items = {\r\n    //   name :companyname.current.value,\r\n    //   cperson: contactperson.current.value,\r\n    //   sname :telephone.current.value  \r\n    \r\n    // }  \r\n\r\n          const nameInputClasses = inValidcompname ?\r\n      'form-control invalid' \r\n      : 'form-control '; \r\n\r\n      const contactInputClasses = inValidcontactperson ?\r\n      'form-control invalid' \r\n      : 'form-control '; \r\n\r\n\r\n       const teleInputClasses = inValidtele ?\r\n      'form-control invalid' \r\n      : 'form-control '; \r\n    \r\n  return (\r\n   <form onSubmit={submitHandler}> \r\n   <div className = \"app\" >\r\n      <div className={nameInputClasses}>  \r\n        <label htmlFor=\"compname\"> Company Name </label>\r\n        <input type=\"text\" id='compname' \r\n         // ref={companyname}\r\n          onBlur ={blurcompname}\r\n          onChange ={compnameChangeHandler}       \r\n          value={companyname} />\r\n          { inValidcompname && <p className = \"error-text\">Please fill in a valid name</p>} \r\n      </div>\r\n\r\n      <div className={contactInputClasses}>  \r\n        <label htmlFor=\"contperson\"> Contact Person </label>\r\n        <input type=\"text\" id='contperson' \r\n        // ref={contactperson}\r\n        value={contactperson}\r\n        onBlur={blurcontactperson}\r\n        onChange ={contactpersonChangeHandler}\r\n        />     \r\n         { inValidcompname && <p className = \"error-text\">Please enter a valid Contact Person</p>} \r\n   \r\n      </div>\r\n\r\n     <div className ={teleInputClasses}>  \r\n        <label htmlFor=\"tel\"> Telephone </label>\r\n        <input type=\"number\" id='tel'  \r\n        // ref={telephone} \r\n        value={tele}\r\n        onBlur={blurtele}\r\n        onChange ={teleChangeHandler}\r\n        /> \r\n         { inValidcompname && <p className = \"error-text\">Please enter a valid Phone</p>} \r\n    \r\n    </div> \r\n    <button > Add Company</button>\r\n    </div>\r\n\r\n </form>\r\n \r\n  );\r\n}\r\n\r\nexport default  AddCompaniesForm;\r\n"]},"metadata":{},"sourceType":"module"}