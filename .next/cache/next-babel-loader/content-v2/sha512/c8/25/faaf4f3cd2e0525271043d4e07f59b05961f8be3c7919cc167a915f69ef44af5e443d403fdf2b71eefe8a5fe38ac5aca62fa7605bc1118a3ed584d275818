{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId].js\";\nimport { Fragment } from \"react\";\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetail() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} // to assign the data to an ID / path\n\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db(); // to connect to the meetups db\n\n  const meetupcollection = db.collection(\"testmeetup\");\n  const meetups = await meetupcollection.find({}, {\n    _id: 1\n  }).toArray(); //find({filter search, kike id ..,empty is all},{_id: 1} = only id values)\n\n  return {\n    //are all possible key included:return boolean, false = all are listed\n    // if not listed  u will get 404\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: alldata._id.toString()\n      }\n    })) // [\n    //   //dynamically fetching the id values\n    //   // {\n    //   //   params: {\n    //   //     // as in the current case\n    //   //     meetupId: \"m1\",\n    //   //   },\n    //   // },\n    //   // {\n    //   //   params: {\n    //   //     // if we have several ways to the same data\n    //   //     meetupId: \"m2\",\n    //   //   },\n    //   // },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        id: meetupId,\n        title: \"First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"This is a first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetail; //  image =\n//    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\";\n//  title = \"Not sure\";\n//  address = \"some where on earth\";\n//  description = \"Some detail about the page\";","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["Fragment","MeetupDetails","MongoClient","MeetupDetail","getStaticPaths","client","connect","db","meetupcollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","alldata","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,YAAT,GAAwB;AACtB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,wHADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAJqC,CAIb;;AACxB,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB,CANqC,CAMkC;;AAEvE,SAAO;AACL;AACA;AACAC,IAAAA,QAAQ,EAAE,KAHL;AAILC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEC,OAAO,CAACR,GAAR,CAAYS,QAAZ;AAAZ;AADsB,KAAb,CAAZ,CAJF,CAOL;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtBK,GAAP;AAwBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,wHAFQ;AAGVC,QAAAA,EAAE,EAAEV,QAHM;AAIVW,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,OAAO,EAAE,0BALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AACD,eAAe7B,YAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\r\n\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MeetupDetail() {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      title=\"First Meetup\"\r\n      address=\"Some Street 5, Some City\"\r\n      description=\"This is a first meetup\"\r\n    />\r\n  );\r\n}\r\n\r\n// to assign the data to an ID / path\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(); // to connect to the meetups db\r\n  const meetupcollection = db.collection(\"testmeetup\");\r\n  const meetups = await meetupcollection.find({}, { _id: 1 }).toArray(); //find({filter search, kike id ..,empty is all},{_id: 1} = only id values)\r\n\r\n  return {\r\n    //are all possible key included:return boolean, false = all are listed\r\n    // if not listed  u will get 404\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: alldata._id.toString() },\r\n    })),\r\n    // [\r\n    //   //dynamically fetching the id values\r\n\r\n    //   // {\r\n    //   //   params: {\r\n    //   //     // as in the current case\r\n    //   //     meetupId: \"m1\",\r\n    //   //   },\r\n    //   // },\r\n    //   // {\r\n    //   //   params: {\r\n    //   //     // if we have several ways to the same data\r\n    //   //     meetupId: \"m2\",\r\n    //   //   },\r\n    //   // },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n        id: meetupId,\r\n        title: \"First Meetup\",\r\n        address: \"Some Street 5, Some City\",\r\n        description: \"This is a first meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetail;\r\n\r\n//  image =\r\n//    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\";\r\n//  title = \"Not sure\";\r\n//  address = \"some where on earth\";\r\n//  description = \"Some detail about the page\";\r\n"]},"metadata":{},"sourceType":"module"}