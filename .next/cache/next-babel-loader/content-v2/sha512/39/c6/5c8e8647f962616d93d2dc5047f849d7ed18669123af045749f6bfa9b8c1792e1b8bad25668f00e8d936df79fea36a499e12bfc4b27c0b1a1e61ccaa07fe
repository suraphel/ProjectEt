{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\n//\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupDetails.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \" description\",\n        content: \"some more thing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails; // import { Fragment } from \"react\";\n// import MeetupDetails from \"../components/meetups/MeetupDetails\";\n// import { MongoClient } from \"mongodb\";\n// function MeetupDetail() {\n//   return (\n//     <MeetupDetail\n//       image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n//       title=\"First Meetup\"\n//       address=\"Some Street 5, Some City\"\n//       description=\"This is a first meetup\"\n//     />\n//   );\n// }\n// // to assign the data to an ID / path\n// export async function getStaticPaths() {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db(); // to connect to the meetups db\n//   const meetupcollection = db.collection(\"testmeetup\");\n//   const meetups = await meetupcollection.find({}, { _id: 1 }).toArray(); //find({filter search, kike id ..,empty is all},{_id: 1} = only id values)\n//   client.close();\n//   return {\n//     //are all possible key included:return boolean, false = all are listed\n//     // if not listed  u will get 404\n//     fallback: false,\n//     paths: meetups.map((meetup) => ({\n//       params: { meetupId: meetup._id.toString() },\n//     })),\n//     // [m\n//     //   //dynamically fetching the id values\n//     //   // {\n//     //   //   params: {\n//     //   //     // as in the current case\n//     //   //     meetupId: \"m1\",\n//     //   //   },\n//     //   // },\n//     //   // {\n//     //   //   params: {\n//     //   //     // if we have several ways to the same data\n//     //   //     meetupId: \"m2\",\n//     //   //   },\n//     //   // },\n//     // ],\n//   };\n// }\n// export async function getStaticProps(context) {\n//   const meetupId = context.params.meetupId;\n//   console.log(meetupId);\n//   return {\n//     props: {\n//       meetupData: {\n//         image:\n//           \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//         id: meetupId,\n//         title: \"First Meetup\",\n//         address: \"Some Street 5, Some City\",\n//         description: \"This is a first meetup\",\n//       },\n//     },\n//   };\n// }\n// export default MeetupDetail;\n// //  image =\n// //    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\";\n// //  title = \"Not sure\";\n// //  address = \"some where on earth\";\n// //  description = \"Some detail about the page\";\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","meetupDetails","title","meetupData","image","address","description"],"mappings":";;AAAA;AAEA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,YAAP,MAAyB,wCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,aAAN,CAAoBC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEF,KAAK,CAACG,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBD,KAF1B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACG,UAAN,CAAiBE,OAH5B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACG,UAAN,CAAiBG;AAJhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQP,a;;AAoET,eAAeA,aAAf,C,CAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["//\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetails\";\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupDetails.title}</title>\r\n        <meta name=\" description\" content=\"some more thing\" />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n\r\n// import { Fragment } from \"react\";\r\n// import MeetupDetails from \"../components/meetups/MeetupDetails\";\r\n\r\n// import { MongoClient } from \"mongodb\";\r\n\r\n// function MeetupDetail() {\r\n//   return (\r\n//     <MeetupDetail\r\n//       image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n//       title=\"First Meetup\"\r\n//       address=\"Some Street 5, Some City\"\r\n//       description=\"This is a first meetup\"\r\n//     />\r\n//   );\r\n// }\r\n\r\n// // to assign the data to an ID / path\r\n// export async function getStaticPaths() {\r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://admin:fdxCicGrFtNJd9gA@cluster0.xdax3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n//   );\r\n//   const db = client.db(); // to connect to the meetups db\r\n//   const meetupcollection = db.collection(\"testmeetup\");\r\n//   const meetups = await meetupcollection.find({}, { _id: 1 }).toArray(); //find({filter search, kike id ..,empty is all},{_id: 1} = only id values)\r\n\r\n//   client.close();\r\n\r\n//   return {\r\n//     //are all possible key included:return boolean, false = all are listed\r\n//     // if not listed  u will get 404\r\n//     fallback: false,\r\n//     paths: meetups.map((meetup) => ({\r\n//       params: { meetupId: meetup._id.toString() },\r\n//     })),\r\n//     // [m\r\n//     //   //dynamically fetching the id values\r\n\r\n//     //   // {\r\n//     //   //   params: {\r\n//     //   //     // as in the current case\r\n//     //   //     meetupId: \"m1\",\r\n//     //   //   },\r\n//     //   // },\r\n//     //   // {\r\n//     //   //   params: {\r\n//     //   //     // if we have several ways to the same data\r\n//     //   //     meetupId: \"m2\",\r\n//     //   //   },\r\n//     //   // },\r\n//     // ],\r\n//   };\r\n// }\r\n\r\n// export async function getStaticProps(context) {\r\n//   const meetupId = context.params.meetupId;\r\n\r\n//   console.log(meetupId);\r\n\r\n//   return {\r\n//     props: {\r\n//       meetupData: {\r\n//         image:\r\n//           \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n//         id: meetupId,\r\n//         title: \"First Meetup\",\r\n//         address: \"Some Street 5, Some City\",\r\n//         description: \"This is a first meetup\",\r\n//       },\r\n//     },\r\n//   };\r\n// }\r\n// export default MeetupDetail;\r\n\r\n// //  image =\r\n// //    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlzLNr0qCu6J6SZY9_bvLQFVoGzc8jg9RaPg&usqp=CAU\";\r\n// //  title = \"Not sure\";\r\n// //  address = \"some where on earth\";\r\n// //  description = \"Some detail about the page\";\r\n"]},"metadata":{},"sourceType":"module"}