{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"A:\\\\Projects\\\\NextJs\\\\Demo\\\\demo2\\\\06-onwards-to-a-bigger-project-starting-project\\\\components\\\\Token\\\\LogInAuthentication .js\";\nimport React, { useState, useEffect } from 'react';\nlet logoutTimer;\nconst AuthenticationContext = /*#__PURE__*/React.createContext({\n  token: '',\n  login: token => {},\n  IsloggedIn: false,\n  logout: () => {}\n});\n\nconst timeCalculator = expirationTime => {\n  const startTime = new Date().getTime();\n  const endingTime = new Date(expirationTime).getTime();\n  const remainingTime = endingTime - startTime;\n  return remainingTime;\n};\n\nconst gettingStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationTime = localStorage.getItem('expirationTime');\n  const remainingTime = timeCalculator(storedExpirationTime);\n\n  if (remainingTime < 3600) {\n    localStorage.removeItem('token');\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthenticationWrapper = props => {\n  const tokenData = gettingStoredToken();\n  let startToken;\n\n  if (startToken) {\n    startToken = tokenData.data;\n  }\n\n  const {\n    0: token,\n    1: setToken\n  } = useState(startToken);\n  const userIsLoggedIn = !!token; // flips the bool value.\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken('token');\n    localStorage.setItem('token', token);\n    const remainingTime = timeCalculator(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData]);\n  const contextValue = {\n    token: token,\n    IsloggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthenticationContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\nexport default AuthenticationContext;","map":{"version":3,"sources":["A:/Projects/NextJs/Demo/demo2/06-onwards-to-a-bigger-project-starting-project/components/Token/LogInAuthentication .js"],"names":["React","useState","useEffect","logoutTimer","AuthenticationContext","createContext","token","login","IsloggedIn","logout","timeCalculator","expirationTime","startTime","Date","getTime","endingTime","remainingTime","gettingStoredToken","storedToken","localStorage","getItem","storedExpirationTime","removeItem","duration","AuthenticationWrapper","props","tokenData","startToken","data","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,IAAIC,WAAJ;AAGA,MAAMC,qBAAqB,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AAC9CC,EAAAA,KAAK,EAAC,EADwC;AAE9CC,EAAAA,KAAK,EAAED,KAAD,IAAW,CAAE,CAF2B;AAG9CE,EAAAA,UAAU,EAAE,KAHkC;AAI9CC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJ8B,CAApB,CAA9B;;AAOA,MAAMC,cAAc,GAAIC,cAAD,IAAoB;AACvC,QAAMC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,QAAMC,UAAU,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAAnB;AACA,QAAME,aAAa,GAAGD,UAAU,GAAGH,SAAnC;AACA,SAAOI,aAAP;AACH,CALD;;AAOA,MAAMC,kBAAkB,GAAG,MAAK;AAC5B,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AACA,QAAMJ,aAAa,GAAGN,cAAc,CAACW,oBAAD,CAApC;;AAEA,MAAGL,aAAa,GAAG,IAAnB,EAAwB;AACpBG,IAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACH;;AAAA,SAAM;AACHhB,IAAAA,KAAK,EAACY,WADH;AAEHK,IAAAA,QAAQ,EAACP;AAFN,GAAN;AAIJ,CAXD;;AAcA,OAAO,MAAMQ,qBAAqB,GAAIC,KAAD,IAAU;AAC3C,QAAMC,SAAS,GAAGT,kBAAkB,EAApC;AACA,MAAIU,UAAJ;;AACA,MAAGA,UAAH,EAAc;AACVA,IAAAA,UAAU,GAAGD,SAAS,CAACE,IAAvB;AACH;;AACD,QAAM;AAAA,OAACtB,KAAD;AAAA,OAAQuB;AAAR,MAAoB5B,QAAQ,CAAC0B,UAAD,CAAlC;AACA,QAAMG,cAAc,GAAG,CAAC,CAACxB,KAAzB,CAP2C,CAOX;;AAEhC,QAAMyB,aAAa,GAAG,MAAK;AACvBF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAV,IAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;;AACA,QAAGnB,WAAH,EAAe;AACX6B,MAAAA,YAAY,CAAC7B,WAAD,CAAZ;AACH;AACJ,GAND;;AAQA,QAAM8B,YAAY,GAAG,CAAC3B,KAAD,EAAQK,cAAR,KAA0B;AAC3CkB,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACAV,IAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8B5B,KAA9B;AACA,UAAMU,aAAa,GAAGN,cAAc,CAACC,cAAD,CAApC;AACAR,IAAAA,WAAW,GAAGgC,UAAU,CAACJ,aAAD,EAAgBf,aAAhB,CAAxB;AACH,GALD;;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACb,QAAGwB,SAAH,EAAa;AACTS,MAAAA,UAAU,CAACJ,aAAD,EAAgBL,SAAS,CAACH,QAA1B,CAAV;AACH;AACH,GAJQ,EAIN,CAACG,SAAD,CAJM,CAAT;AAMF,QAAMU,YAAY,GAAG;AACf9B,IAAAA,KAAK,EAAGA,KADO;AAEfE,IAAAA,UAAU,EAAGsB,cAFE;AAGfvB,IAAAA,KAAK,EAAE0B,YAHQ;AAIfxB,IAAAA,MAAM,EAAEsB;AAJO,GAArB;AAME,sBAAO,QAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAIK,YAAzC;AAAA,cAAwDX,KAAK,CAACY;AAA9D;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAtCM;AAuCP,eAAejC,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nlet logoutTimer; \r\n\r\n\r\nconst AuthenticationContext = React.createContext({\r\n    token:'',\r\n    login:(token) => {},\r\n    IsloggedIn: false,\r\n    logout: () => {}\r\n}); \r\n\r\nconst timeCalculator = (expirationTime) => {\r\n    const startTime = new Date().getTime();\r\n    const endingTime = new Date(expirationTime).getTime();\r\n    const remainingTime = endingTime - startTime; \r\n    return remainingTime; \r\n}\r\n\r\nconst gettingStoredToken = () =>{\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExpirationTime = localStorage.getItem('expirationTime');\r\n    const remainingTime = timeCalculator(storedExpirationTime);\r\n\r\n    if(remainingTime < 3600){\r\n        localStorage.removeItem('token'); \r\n    }return{\r\n        token:storedToken,\r\n        duration:remainingTime\r\n    }\r\n};\r\n\r\n\r\nexport const AuthenticationWrapper = (props) =>{\r\n    const tokenData = gettingStoredToken();\r\n    let startToken; \r\n    if(startToken){\r\n        startToken = tokenData.data;\r\n    }\r\n    const [token, setToken] = useState(startToken);\r\n    const userIsLoggedIn = !!token; // flips the bool value.\r\n\r\n    const logoutHandler = () =>{\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n        if(logoutTimer){\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }\r\n\r\n    const loginHandler = (token, expirationTime)=> {\r\n        setToken('token'); \r\n        localStorage.setItem('token', token); \r\n        const remainingTime = timeCalculator(expirationTime); \r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);      \r\n    }\r\n\r\n    useEffect(() => {\r\n       if(tokenData){\r\n           setTimeout(logoutHandler, tokenData.duration);\r\n       }        \r\n    }, [tokenData]); \r\n\r\n  const contextValue = {\r\n        token : token, \r\n        IsloggedIn : userIsLoggedIn, \r\n        login: loginHandler, \r\n        logout: logoutHandler\r\n    }\r\n    return <AuthenticationContext.Provider value = {contextValue}>{props.children}</AuthenticationContext.Provider>; \r\n\r\n}\r\nexport default AuthenticationContext;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}